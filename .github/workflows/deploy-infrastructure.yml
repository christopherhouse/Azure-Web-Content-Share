name: Deploy Infrastructure

on:
  push:
    branches:
      - main
    paths:
      - 'infra/bicep/**'
  pull_request:
    branches:
      - main
    paths:
      - 'infra/bicep/**'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Select environment to deploy'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - prod
      resourceGroupName:
        description: 'Resource Group Name (leave empty for default)'
        required: false
        type: string

permissions:
  id-token: write
  contents: read
  pull-requests: write

jobs:
  build:
    name: Build Infrastructure Templates
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Validate Bicep templates
        run: |
          echo "Validating main.bicep template..."
          az bicep build --file infra/bicep/main.bicep --stdout > /dev/null
          
          echo "Validating individual modules..."
          for module in infra/bicep/modules/*/main.bicep; do
            echo "Validating $module..."
            az bicep build --file "$module" --stdout > /dev/null
          done
          
      - name: Build Bicep templates
        run: |
          echo "Building main.bicep template..."
          az bicep build --file infra/bicep/main.bicep
          
          echo "Building individual modules..."
          for module in infra/bicep/modules/*/main.bicep; do
            echo "Building $module..."
            az bicep build --file "$module"
          done
          
      - name: Upload infrastructure artifacts
        uses: actions/upload-artifact@v4
        with:
          name: bicep-templates
          path: infra/bicep/
          retention-days: 30

  deploy-dev:
    name: Deploy to Development
    runs-on: ubuntu-latest
    needs: build
    if: (github.ref == 'refs/heads/main' && github.event_name == 'push') || (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'dev')
    environment: 
      name: development
      url: ${{ steps.deploy.outputs.frontendUrl }}
    
    steps:
      - name: Download infrastructure artifacts
        uses: actions/download-artifact@v4
        with:
          name: bicep-templates
          path: infra/bicep/
          
      - name: Azure login using OIDC
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          
      - name: Set resource group name
        id: set-rg
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ] && [ -n "${{ github.event.inputs.resourceGroupName }}" ]; then
            echo "resourceGroupName=${{ github.event.inputs.resourceGroupName }}" >> $GITHUB_OUTPUT
          else
            echo "resourceGroupName=rg-awcs-dev" >> $GITHUB_OUTPUT
          fi
          
      - name: Deploy infrastructure to Development
        id: deploy
        uses: azure/arm-deploy@v2
        with:
          scope: resourcegroup
          resourceGroupName: ${{ steps.set-rg.outputs.resourceGroupName }}
          template: infra/bicep/main.bicep
          parameters: infra/bicep/parameters/dev.bicepparam
          failOnStdErr: false
          deploymentName: 'infra-dev-${{ github.run_number }}'
          
      - name: Output deployment results
        run: |
          echo "Resource Group: ${{ steps.deploy.outputs.resourceGroupName }}"
          echo "Location: ${{ steps.deploy.outputs.location }}"
          echo "Container Apps Environment: ${{ steps.deploy.outputs.containerAppsEnvironmentName }}"
          echo "Container Registry: ${{ steps.deploy.outputs.containerRegistryLoginServer }}"
          echo "User Assigned Managed Identity: ${{ steps.deploy.outputs.userAssignedManagedIdentityId }}"

  deploy-prod:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'prod'
    environment: 
      name: production
      url: ${{ steps.deploy.outputs.frontendUrl }}
    
    steps:
      - name: Download infrastructure artifacts
        uses: actions/download-artifact@v4
        with:
          name: bicep-templates
          path: infra/bicep/
          
      - name: Azure login using OIDC
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          
      - name: Set resource group name
        id: set-rg
        run: |
          if [ -n "${{ github.event.inputs.resourceGroupName }}" ]; then
            echo "resourceGroupName=${{ github.event.inputs.resourceGroupName }}" >> $GITHUB_OUTPUT
          else
            echo "resourceGroupName=rg-awcs-prod" >> $GITHUB_OUTPUT
          fi
          
      - name: Deploy infrastructure to Production
        id: deploy
        uses: azure/arm-deploy@v2
        with:
          scope: resourcegroup
          resourceGroupName: ${{ steps.set-rg.outputs.resourceGroupName }}
          template: infra/bicep/main.bicep
          parameters: infra/bicep/parameters/prod.bicepparam
          failOnStdErr: false
          deploymentName: 'infra-prod-${{ github.run_number }}'
          
      - name: Output deployment results
        run: |
          echo "Resource Group: ${{ steps.deploy.outputs.resourceGroupName }}"
          echo "Location: ${{ steps.deploy.outputs.location }}"
          echo "Container Apps Environment: ${{ steps.deploy.outputs.containerAppsEnvironmentName }}"
          echo "Container Registry: ${{ steps.deploy.outputs.containerRegistryLoginServer }}"
          echo "User Assigned Managed Identity: ${{ steps.deploy.outputs.userAssignedManagedIdentityId }}"